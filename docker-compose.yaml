version: "3.9"
services:

  ui:
    image: ui:dev
    build:
      context: ./ui
      target: developement
      args:
        - HTTP_PROXY
        - HTTPS_PROXY
        - NO_PROXY
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./ui:/usr/src/app
      - ui_node_modules:/usr/src/app/node_modules
    environment:
      - EXPOSED_PORT=${UI_EXPOSED_PORT}
    ports:
      - ${UI_HOST_PORT}:${UI_EXPOSED_PORT}

  gateway:
    image: gateway:dev
    build:
      context: ./gateway
      args:
        - HTTP_PROXY
        - HTTPS_PROXY
        - NO_PROXY
        - http_proxy
        - https_proxy
        - no_proxy
    ports:
      - ${GATEWAY_HOST_PORT}:${GATEWAY_EXPOSED_PORT}

  svc-users:
    image: svc-users:dev
    build:
      context: ./svc-users
      args:
        - HTTP_PROXY
        - HTTPS_PROXY
        - NO_PROXY
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - DATABASE_URL="pdo-mysql://${MYSQL_USER_SVC_USER}:${MYSQL_PASSWORD_SVC_USER}@${MYSQL_HOST}:${MYSQL_PORT}/${DB_SVC_USER}?serverVersion=8.0"
    volumes:
      - ./svc-users:/var/www/html
      - svc_users_vendor:/var/www/html/vendor
    ports:
      - ${SVC_USERS_HOST_PORT}:${SVC_USERS_EXPOSED_PORT}

  svc-groups:
    image: svc-groups:dev
    build:
      context: ./svc-groups
      args:
        - HTTP_PROXY
        - HTTPS_PROXY
        - NO_PROXY
        - http_proxy
        - https_proxy
        - no_proxy
    ports:
      - ${SVC_GROUPS_HOST_PORT}:${SVC_GROUPS_EXPOSED_PORT}

  svc-posts:
    image: svc-posts:dev
    build:
      context: ./svc-posts
      target: developement
      args:
        - HTTP_PROXY
        - HTTPS_PROXY
        - NO_PROXY
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./svc-posts:/usr/src/app
      - svc_posts_node_modules:/usr/src/app/node_modules
    ports:
      - ${SVC_POSTS_HOST_PORT}:${SVC_POSTS_EXPOSED_PORT}

  mongo:
    image: mongo
    restart: always
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - ./.mongo/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:${MONGO_PORT}/
    links:
      - mongo

  mysql:
    image: mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - ./.mysql/data:/var/lib/mysql
      - ./mysql/script:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - ${PMA_HOST_PORT}:80

volumes:
  ui_node_modules:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/ui/node_modules
  svc_posts_node_modules:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/svc-posts/node_modules
  svc_users_vendor:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/svc-users/vendor
